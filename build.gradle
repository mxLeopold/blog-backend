// allprojects里是项目本身需要的依赖，
// 比如我现在要依赖我自己maven库的toastutils库，
// 那么我应该将maven {url ‘https://dl.bintray.com/calvinning/maven‘}写在这里，而不是buildscript中，不然找不到。
allprojects {
    group 'wiki.soma'
    version '1.0-SNAPSHOT'
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }
}

// buildscript里是gradle脚本执行所需依赖，分别是对应的maven库和插件
buildscript {
    ext {
        springIOVersion = '1.0.0.RELEASE'
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:${springIOVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

// 针对java文件就是用UTF-8的编码进行编译
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'gradle-demo'
    version = '0.0.1'
    manifest {
        attributes "Manifest-Version": 1.0,
                'Main-Class': 'com.chen.GradleDemoApplication'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

ext {
    junitVersion = '4.12'
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:Brussels-SR6'
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Brixton.SR4'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

dependencies {
    compile 'org.springframework:spring-core'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile "junit:junit:${junitVersion}"
}